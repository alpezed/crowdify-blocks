{"version":3,"file":"blocks/filters/index.js","mappings":"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,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;;;;;;;;;;;;UC5ED;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://crowdify-blocks/./node_modules/@wordpress/icons/build-module/library/post-categories.js","webpack://crowdify-blocks/./src/blocks/filters/edit.js","webpack://crowdify-blocks/./src/blocks/filters/index.js","webpack://crowdify-blocks/./src/blocks/filters/use-taxonomies.js","webpack://crowdify-blocks/./src/utils/constants.js","webpack://crowdify-blocks/./src/blocks/filters/editor.scss?7b7a","webpack://crowdify-blocks/./src/blocks/filters/style.scss?54f7","webpack://crowdify-blocks/external window \"React\"","webpack://crowdify-blocks/external window [\"wp\",\"blockEditor\"]","webpack://crowdify-blocks/external window [\"wp\",\"blocks\"]","webpack://crowdify-blocks/external window [\"wp\",\"components\"]","webpack://crowdify-blocks/external window [\"wp\",\"coreData\"]","webpack://crowdify-blocks/external window [\"wp\",\"data\"]","webpack://crowdify-blocks/external window [\"wp\",\"element\"]","webpack://crowdify-blocks/external window [\"wp\",\"i18n\"]","webpack://crowdify-blocks/external window [\"wp\",\"primitives\"]","webpack://crowdify-blocks/./node_modules/classnames/index.js","webpack://crowdify-blocks/webpack/bootstrap","webpack://crowdify-blocks/webpack/runtime/chunk loaded","webpack://crowdify-blocks/webpack/runtime/compat get default export","webpack://crowdify-blocks/webpack/runtime/define property getters","webpack://crowdify-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://crowdify-blocks/webpack/runtime/make namespace object","webpack://crowdify-blocks/webpack/runtime/jsonp chunk loading","webpack://crowdify-blocks/webpack/before-startup","webpack://crowdify-blocks/webpack/startup","webpack://crowdify-blocks/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst postCategories = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M20 4H4v1.5h16V4zm-2 9h-3c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3zM4 9.5h9V8H4v1.5zM9 13H6c-1.1 0-2 .9-2 2v3c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2zm.5 5c0 .3-.2.5-.5.5H6c-.3 0-.5-.2-.5-.5v-3c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3z\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n}));\nexport default postCategories;\n//# sourceMappingURL=post-categories.js.map","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * Wordpress Dependencies\n *\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tstore as blockEditorStore,\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tuseBlockProps,\n\t__experimentalGetGapCSSValue as getGapCSSValue,\n} from '@wordpress/block-editor';\nimport { store as coreStore, useEntityRecords } from '@wordpress/core-data';\nimport { Spinner, TextControl } from '@wordpress/components';\nimport { select, useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { TEXT_DOMAIN } from '../../utils/constants';\nimport { useTaxonomies } from './use-taxonomies';\n\n/**\n *  Styles\n */\nimport './editor.scss';\n\nexport default function Edit( props ) {\n\tconst {\n\t\tclientId,\n\t\tattributes,\n\t\tsetAttributes,\n\t\tcontext: { query: { postType } = {} },\n\t} = props;\n\n\tconst { term, separator, textAlign, style } = attributes;\n\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\t// Get the parent block's clientId which is the crowdify/posts that we created as variant of core/query.\n\tconst { rootClientId, parentBlockClientId, parentAttributes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockHierarchyRootClientId,\n\t\t\t\tgetBlockAttributes,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\t// Get clientID of the parent block.\n\t\t\tconst rootClientId = getBlockHierarchyRootClientId( clientId );\n\t\t\t// Get parent attributes using child block ID\n\t\t\t// @see https://github.com/WordPress/gutenberg/issues/9032\n\t\t\tconst parentAttributes = getBlockAttributes( rootClientId );\n\n\t\t\treturn {\n\t\t\t\trootClientId,\n\t\t\t\tparentBlockClientId: getBlockRootClientId( clientId ),\n\t\t\t\tparentAttributes,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// Update the parent block attribute\n\tconst onUpdateParentAttributes = ( e, category ) => {\n\t\te.preventDefault();\n\n\t\tif ( ! parentBlockClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( category === 'all' ) {\n\t\t\tupdateBlockAttributes( rootClientId, {\n\t\t\t\t...parentAttributes,\n\t\t\t\tquery: {\n\t\t\t\t\t...parentAttributes.query,\n\t\t\t\t\ttaxQuery: {\n\t\t\t\t\t\t...parentAttributes.query?.taxQuery,\n\t\t\t\t\t\tcategory: [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tupdateBlockAttributes( rootClientId, {\n\t\t\t...parentAttributes,\n\t\t\tquery: {\n\t\t\t\t...parentAttributes.query,\n\t\t\t\ttaxQuery: {\n\t\t\t\t\t...parentAttributes.query?.taxQuery,\n\t\t\t\t\tcategory: [ category ],\n\t\t\t\t},\n\t\t\t},\n\t\t} );\n\t};\n\n\t// const taxonomies = useTaxonomies( postType );\n\n\t// if ( ! taxonomies || taxonomies.length === 0 ) {\n\t// \treturn null;\n\t// }\n\n\tconst { records: categories, isResolving } = useEntityRecords(\n\t\t'taxonomy',\n\t\t'category'\n\t);\n\n\tif ( isResolving ) {\n\t\treturn <Spinner />;\n\t}\n\n\tconst blockGap = getGapCSSValue( style?.spacing?.blockGap );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t[ `taxonomy-${ term }` ]: term,\n\t\t} ),\n\t} );\n\n\tconst styles = {\n\t\t...blockProps?.style,\n\t\tgap: blockGap,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls group=\"advanced\">\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tlabel={ __( 'Separator' ) }\n\t\t\t\t\tvalue={ separator || '' }\n\t\t\t\t\tonChange={ ( nextValue ) => {\n\t\t\t\t\t\tsetAttributes( { separator: nextValue } );\n\t\t\t\t\t} }\n\t\t\t\t\thelp={ __( 'Enter character(s) used to separate terms.' ) }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t<ul { ...blockProps } style={ styles }>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\tclassName={ classnames( {\n\t\t\t\t\t\t\t'is-selected':\n\t\t\t\t\t\t\t\t! parentAttributes.query?.taxQuery?.category ||\n\t\t\t\t\t\t\t\tparentAttributes.query?.taxQuery?.category\n\t\t\t\t\t\t\t\t\t?.length === 0,\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t\tonClick={ ( e ) =>\n\t\t\t\t\t\t\tonUpdateParentAttributes( e, 'all' )\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'View All', 'crowdify-blocks' ) }\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t{ categories?.map( ( category ) => (\n\t\t\t\t\t<li key={ category.id }>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={ category.link }\n\t\t\t\t\t\t\tclassName={ classnames( {\n\t\t\t\t\t\t\t\t'is-selected':\n\t\t\t\t\t\t\t\t\tparentAttributes.query?.taxQuery?.category?.includes(\n\t\t\t\t\t\t\t\t\t\tcategory.id\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\tonClick={ ( e ) =>\n\t\t\t\t\t\t\t\tonUpdateParentAttributes( e, category.id )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ category.name }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</>\n\t);\n}\n","/**\n * Wordpress Dependencies\n *\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { postCategories as icon } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\n\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\ticon,\n\tedit: Edit,\n} );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport const useTaxonomies = ( postType ) => {\n\tconst taxonomies = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getTaxonomies } = select( coreStore );\n\t\t\tconsole.log( { getTaxonomies } );\n\t\t\treturn getTaxonomies( {\n\t\t\t\ttype: postType,\n\t\t\t\tper_page: -1,\n\t\t\t} );\n\t\t},\n\t\t[ postType ]\n\t);\n\treturn useMemo( () => {\n\t\treturn taxonomies?.filter(\n\t\t\t( { visibility } ) => !! visibility?.publicly_queryable\n\t\t);\n\t}, [ taxonomies ] );\n};\n","export const TEXT_DOMAIN = 'crowdify-blocks';\nexport const CATEGORY = 'crowdify';\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/filters/index\": 0,\n\t\"blocks/filters/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkcrowdify_blocks\"] = globalThis[\"webpackChunkcrowdify_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/filters/style-index\"], () => (__webpack_require__(\"./src/blocks/filters/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["classnames","__","store","blockEditorStore","AlignmentToolbar","BlockControls","InspectorControls","useBlockProps","__experimentalGetGapCSSValue","getGapCSSValue","coreStore","useEntityRecords","Spinner","TextControl","select","useSelect","useDispatch","TEXT_DOMAIN","useTaxonomies","Edit","props","clientId","attributes","setAttributes","context","query","postType","term","separator","textAlign","style","updateBlockAttributes","rootClientId","parentBlockClientId","parentAttributes","getBlockRootClientId","getBlockHierarchyRootClientId","getBlockAttributes","onUpdateParentAttributes","e","category","preventDefault","taxQuery","records","categories","isResolving","createElement","blockGap","spacing","blockProps","className","styles","gap","Fragment","value","onChange","nextAlign","group","__nextHasNoMarginBottom","autoComplete","label","nextValue","help","href","length","onClick","map","key","id","link","includes","name","registerBlockType","postCategories","icon","metadata","edit","useMemo","taxonomies","getTaxonomies","console","log","type","per_page","filter","visibility","publicly_queryable","CATEGORY"],"sourceRoot":""}